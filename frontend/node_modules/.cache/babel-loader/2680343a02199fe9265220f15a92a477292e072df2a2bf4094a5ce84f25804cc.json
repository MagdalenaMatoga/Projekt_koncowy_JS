{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodersLab\\\\final\\\\Projekt_koncowy_JS\\\\frontend\\\\src\\\\components\\\\basket\\\\Basket.js\",\n  _s = $RefreshSig$();\nimport styles from './Basket.module.scss';\nimport { useState, useContext, useEffect } from \"react\";\nimport BasketDetails from \"../basket.Details/BasketDetails\";\nimport { CartContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Basket() {\n  _s();\n  const [cart] = useContext(CartContext);\n  const [isDetailsVisible, setIsDetailsVisible] = useState(false); //przy użyciu hooka  służy do śledzenia widoczności szczegółów koszyka\n  const [totalCartItems, setTotalCartItems] = useState(0); //  stan do przechowywania liczby produktów w koszyku\n\n  // monitorowanie zmian w koszyku. UseEffect oblicza sumę wszystkich ilości produktów w koszyku i aktualizuje stan totalCartItems z tą wartością.\n\n  useEffect(() => {\n    let totalCount = 0;\n    Object.values(cart).forEach(item => {\n      totalCount += item.quantity;\n    });\n    setTotalCartItems(totalCount);\n  }, [cart]);\n\n  //ToggleDetails, showDetails i closeDetails. wykorzystywane do przełączania widoczności szczegółów koszyka. toggleDetails sprawdza, czy szczegóły są aktualnie widoczne i na tej podstawie wywołuje showDetails lub closeDetails.\n\n  const toggleDetails = () => {\n    if (isDetailsVisible) {\n      closeDetails();\n    } else {\n      showDetails();\n    }\n  };\n  const showDetails = () => {\n    setIsDetailsVisible(true);\n  };\n  const closeDetails = () => {\n    setIsDetailsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cartContent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.basketLogo,\n          alt: \"\",\n          src: \"/shopping-cart.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.counter,\n          children: [totalCartItems, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isDetailsVisible && /*#__PURE__*/_jsxDEV(BasketDetails, {\n      handleClose: closeDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this); //isDetailsVisible jest ustawione na true, to zostanie wyrenderowany komponent BasketDetails  z przekazaniem do niego propsa handleClose, który wskazuje na funkcję closeDetails. W przypadku, jeśli isDetailsVisible jest ustawione na false, nic nie zostanie wyrenderowane.\n}\n\n// Przekazanie funkcji closeDetails do komponentu <BasketDetails /> jako props handleClose. Komunikacja między Basket a BasketDetails\n_s(Basket, \"RohAgOaBC99gYolQIWmwrssAirg=\");\n_c = Basket;\nexport default Basket;\nvar _c;\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"names":["styles","useState","useContext","useEffect","BasketDetails","CartContext","jsxDEV","_jsxDEV","Basket","_s","cart","isDetailsVisible","setIsDetailsVisible","totalCartItems","setTotalCartItems","totalCount","Object","values","forEach","item","quantity","toggleDetails","closeDetails","showDetails","children","className","cartContent","onClick","basketLogo","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","counter","handleClose","_c","$RefreshReg$"],"sources":["C:/CodersLab/final/Projekt_koncowy_JS/frontend/src/components/basket/Basket.js"],"sourcesContent":["import styles from './Basket.module.scss'\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport BasketDetails from \"../basket.Details/BasketDetails\";\r\nimport { CartContext } from \"../../App\";\r\n\r\nfunction Basket() {\r\n  const [cart] = useContext(CartContext);\r\n  const [isDetailsVisible, setIsDetailsVisible] = useState(false); //przy użyciu hooka  służy do śledzenia widoczności szczegółów koszyka\r\n  const [totalCartItems, setTotalCartItems] = useState(0); //  stan do przechowywania liczby produktów w koszyku\r\n\r\n  // monitorowanie zmian w koszyku. UseEffect oblicza sumę wszystkich ilości produktów w koszyku i aktualizuje stan totalCartItems z tą wartością.\r\n\r\n  useEffect(() => {  \r\n    let totalCount = 0;\r\n    Object.values(cart).forEach(item => {\r\n      totalCount += item.quantity;\r\n    });\r\n    setTotalCartItems(totalCount);\r\n  }, [cart]);\r\n\r\n  //ToggleDetails, showDetails i closeDetails. wykorzystywane do przełączania widoczności szczegółów koszyka. toggleDetails sprawdza, czy szczegóły są aktualnie widoczne i na tej podstawie wywołuje showDetails lub closeDetails.\r\n\r\n  const toggleDetails = () => {\r\n    if (isDetailsVisible) {\r\n      closeDetails();\r\n    } else {\r\n      showDetails();\r\n    }\r\n  };\r\n  const showDetails = () => {\r\n    setIsDetailsVisible(true);\r\n  };\r\n  const closeDetails = () => {\r\n    setIsDetailsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.cartContent}>\r\n        <div onClick={toggleDetails}>\r\n          <img className={styles.basketLogo} alt=\"\" src=\"/shopping-cart.png\" />{\" \"}\r\n          <span className={styles.counter}>{totalCartItems} </span>\r\n        </div>\r\n      </div>\r\n      {isDetailsVisible && <BasketDetails handleClose={closeDetails} />} \r\n    </div>\r\n  );   //isDetailsVisible jest ustawione na true, to zostanie wyrenderowany komponent BasketDetails  z przekazaniem do niego propsa handleClose, który wskazuje na funkcję closeDetails. W przypadku, jeśli isDetailsVisible jest ustawione na false, nic nie zostanie wyrenderowane.\r\n}\r\n\r\n// Przekazanie funkcji closeDetails do komponentu <BasketDetails /> jako props handleClose. Komunikacja między Basket a BasketDetails\r\n\r\n\r\nexport default Basket;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,SAASC,WAAW,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EACtC,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzD;;EAEAE,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,GAAG,CAAC;IAClBC,MAAM,CAACC,MAAM,CAACP,IAAI,CAAC,CAACQ,OAAO,CAACC,IAAI,IAAI;MAClCJ,UAAU,IAAII,IAAI,CAACC,QAAQ;IAC7B,CAAC,CAAC;IACFN,iBAAiB,CAACC,UAAU,CAAC;EAC/B,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;;EAEA,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIV,gBAAgB,EAAE;MACpBW,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EACD,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBX,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EACD,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBV,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAEzB,MAAM,CAAC0B,WAAY;MAAAF,QAAA,eACjCjB,OAAA;QAAKoB,OAAO,EAAEN,aAAc;QAAAG,QAAA,gBAC1BjB,OAAA;UAAKkB,SAAS,EAAEzB,MAAM,CAAC4B,UAAW;UAACC,GAAG,EAAC,EAAE;UAACC,GAAG,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAAC,GAAG,eACzE3B,OAAA;UAAMkB,SAAS,EAAEzB,MAAM,CAACmC,OAAQ;UAAAX,QAAA,GAAEX,cAAc,EAAC,GAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLvB,gBAAgB,iBAAIJ,OAAA,CAACH,aAAa;MAACgC,WAAW,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC,CACN,CAAG;AACP;;AAEA;AAAAzB,EAAA,CA5CSD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}